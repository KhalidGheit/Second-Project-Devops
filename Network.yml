Description:
  this is the second project in fwd cloud devops nanodegree, and it's about deploting high availability website 
Parameters:
  EnvironmentName:
    Type: String
  VpcCIDR:
    Description: The range of IP's in the VPC
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1CIDR:
    Type: String
    Default: 10.0.0.0/24
  PublicSubnet2CIDR:
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnet1CIDR:
    Type: String
    Default: 10.0.2.0/24
  PrivateSubnet2CIDR:
    Type: String
    Default: 10.0.3.0/24
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName
  Internetgateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref Internetgateway
      VpcId: !Ref VPC
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: True
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} -PublicSubnet1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: True
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} -PublicSubnet2
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: True
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} -PrivateSubnet1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: True
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} -PrivateSubnet2
  NAT1Gateway:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId: !GetAtt NAT1GatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} -Nat1Gateway
  NAT1GatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
  NAT2Gateway:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId: !GetAtt NAT2GatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} -Nat2 mGateway
  NAT2GatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} -PublicRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Internetgateway 
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} -PrivateRouteTable1
  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NAT1Gateway
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-PrivateRouteTable2
  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NAT2Gateway
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2
Outputs: 

    VPC: 
      Description: A reference to the created VPC
      Value: !Ref VPC
      Export:
        Name: !Sub ${EnvironmentName}-VPC

    VPCPublicRouteTable:
      Description: Public Routing
      Value: !Ref PublicRouteTable
      Export:
        Name: !Sub ${EnvironmentName}-PublicRouteTable

    VPCPrivateRouteTable1:
      Description: Private Routing AZ1
      Value: !Ref PrivateRouteTable1
      Export:
        Name: !Sub ${EnvironmentName}-PrivateRouteTable1

    VPCPrivateRouteTable2:
      Description: Private Routing AZ2
      Value: !Ref PrivateRouteTable2
      Export:
        Name: !Sub ${EnvironmentName}-PrivateRouteTable2

    PublicSubnets:
      Description: A list of the public subnets
      Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
      Export:
        Name: !Sub ${EnvironmentName}-PublicSubnets

    PrivateSubnets:
      Description: A list of the private subnets
      Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
      Export:
        Name: !Sub ${EnvironmentName}-PrivateSubnets

    PublicSubnet1:
      Description: A reference to the public subnet in the 1st Availability Zone
      Value: !Ref PublicSubnet1
      Export:
        Name: !Sub ${EnvironmentName}-PublicSubnet1

    PublicSubnet2: 
      Description: A reference to the public subnet in the 2nd Availability Zone
      Value: !Ref PublicSubnet2
      Export:
        Name: !Sub ${EnvironmentName}-PublicSubnet2

    PrivateSubnet1:
      Description: A reference to the private subnet in the 1st Availability Zone
      Value: !Ref PrivateSubnet1
      Export:
        Name: !Sub ${EnvironmentName}-PrivateSubnet1

    PrivateSubnet2: 
      Description: A reference to the private subnet in the 2nd Availability Zone
      Value: !Ref PrivateSubnet2
      Export:
        Name: !Sub ${EnvironmentName}-PrivateSubnet2

